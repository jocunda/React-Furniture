{"version":3,"sources":["assets/8k_earth_daymap.jpg","assets/8k_earth_normal_map.jpg","assets/8k_earth_specular_map.jpg","assets/8k_earth_clouds.jpg","components/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Earth","props","useLoader","TextureLoader","EarthDayMap","EarthNormalMap","EarthSpecularMap","EarthCloudsMap","colorMap","normalMap","specularMap","cloudsMap","earthRef","useRef","cloudRef","useFrame","elapsedTime","clock","getElapsedTime","current","rotation","y","color","position","intensity","Stars","radius","depth","count","factor","saturation","fade","ref","args","map","opacity","depthWrite","transparent","side","THREE","metalness","roughness","OrbitControls","enableZoom","enablePan","enableRotate","zoomSpeed","panSpeed","rotateSpeed","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAe,MAA0B,4CCA1B,MAA0B,gDCA1B,MAA0B,kDCA1B,MAA0B,4C,+BCU1B,SAASA,EAAMC,GAE1B,MAAsDC,YAAUC,gBAAe,CAACC,EAAaC,EAAgBC,EAAkBC,IAA/H,mBAAOC,EAAP,KAAiBC,EAAjB,KAA4BC,EAA5B,KAAyCC,EAAzC,KAEMC,EAAWC,mBACXC,EAAWD,mBASjB,OAPAE,aAAS,YAAgB,IACfC,EADc,EAAZC,MACkBC,iBAE1BN,EAASO,QAAQC,SAASC,EAAIL,EAAc,EAC5CF,EAASK,QAAQC,SAASC,EAAIL,EAAc,KAI5C,qCACI,4BAAYM,MAAM,UAAUC,SAAU,CAAC,EAAG,EAAG,GAAIC,UAAW,MAC5D,cAACC,EAAA,EAAD,CAAOC,OAAQ,IAAKC,MAAO,GAAIC,MAAO,IAAOC,OAAQ,EAAGC,WAAY,EAAGC,MAAM,IAC7E,uBAAMC,IAAKlB,EAAX,UACI,gCAAgBmB,KAAM,CAAC,MAAO,GAAI,MAClC,mCAAmBC,IAAKvB,EAAWwB,QAAS,GAAKC,YAAY,EAAMC,aAAa,EAAMC,KAAMC,kBAEhG,uBAAMP,IAAKpB,EAAX,UACI,gCAAgBqB,KAAM,CAAC,EAAG,GAAI,MAC9B,mCAAmBvB,YAAaA,IAChC,sCAAsBwB,IAAK1B,EAAUC,UAAWA,EAAW+B,UAAW,GAAKC,UAAW,KACtF,cAACC,EAAA,EAAD,CACIC,YAAY,EACZC,WAAW,EACXC,cAAc,EACdC,UAAW,GACXC,SAAU,GACVC,YAAa,WCpClB,SAASC,IACtB,OACE,mCACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,cAAClD,EAAD,UCXV,IAYemD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fae5b38b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/8k_earth_daymap.54672c1f.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_normal_map.930cf2e9.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_specular_map.7b4efa59.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_clouds.08fcd800.jpg\";","import EarthDayMap from \"../assets/8k_earth_daymap.jpg\"\r\nimport EarthNormalMap from \"../assets/8k_earth_normal_map.jpg\"\r\nimport EarthSpecularMap from \"../assets/8k_earth_specular_map.jpg\"\r\nimport EarthCloudsMap from \"../assets/8k_earth_clouds.jpg\"\r\nimport { TextureLoader } from \"three\"\r\nimport { useFrame, useLoader } from \"@react-three/fiber\"\r\nimport { OrbitControls, Stars } from \"@react-three/drei\"\r\nimport * as THREE from \"three\"\r\nimport { useRef } from \"react\"\r\n\r\nexport default function Earth(props) {\r\n\r\n    const [colorMap, normalMap, specularMap, cloudsMap] = useLoader(TextureLoader, [EarthDayMap, EarthNormalMap, EarthSpecularMap, EarthCloudsMap])\r\n\r\n    const earthRef = useRef();\r\n    const cloudRef = useRef();\r\n\r\n    useFrame(({ clock }) => {\r\n        const elapsedTime = clock.getElapsedTime();\r\n\r\n        earthRef.current.rotation.y = elapsedTime / 6;\r\n        cloudRef.current.rotation.y = elapsedTime / 6;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <pointLight color=\"#f6f3ea\" position={[2, 0, 5]} intensity={1.2} />\r\n            <Stars radius={300} depth={60} count={20000} factor={7} saturation={0} fade={true} />\r\n            <mesh ref={cloudRef} >\r\n                <sphereGeometry args={[1.005, 32, 32]} />\r\n                <meshPhongMaterial map={cloudsMap} opacity={0.4} depthWrite={true} transparent={true} side={THREE.DoubleSide} />\r\n            </mesh>\r\n            <mesh ref={earthRef} >\r\n                <sphereGeometry args={[1, 32, 32]} />\r\n                <meshPhongMaterial specularMap={specularMap} />\r\n                <meshStandardMaterial map={colorMap} normalMap={normalMap} metalness={0.4} roughness={0.7} />\r\n                <OrbitControls\r\n                    enableZoom={true}\r\n                    enablePan={true}\r\n                    enableRotate={true}\r\n                    zoomSpeed={0.6}\r\n                    panSpeed={0.5}\r\n                    rotateSpeed={0.4}\r\n                />\r\n            </mesh>\r\n        </>\r\n    )\r\n}","import './App.css';\nimport { Suspense } from \"react\"\nimport { Canvas } from \"@react-three/fiber\"\nimport Earth from \"./components/index\"\n\n\nexport default function App() {\n  return (\n    <>\n      <Canvas>\n        <Suspense fallback={null}>\n          <Earth />\n        </Suspense>\n      </Canvas>\n\n    </>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}